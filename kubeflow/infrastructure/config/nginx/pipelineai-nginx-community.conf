# The most CPU-intensive operation is the SSL handshake
# There are two ways to minimize the number of these operations per client:
#   first is by enabling keepalive connections to send several requests via one connection
#   second is to reuse SSL session parameters to avoid SSL handshakes for parallel and subsequent connections
# The sessions are stored in an SSL session cache shared between workers and configured by the ssl_session_cache directive
# One megabyte of the cache contains about 4000 sessions
# The default cache timeout is 5 minutes which can be increased by using the ssl_session_timeout directive
ssl                         on;
ssl_certificate             /root/certs/cloud.pipeline.ai.pem;
ssl_certificate_key         /root/certs/cloud.pipeline.ai.key;
ssl_dhparam                 /root/certs/dhparam.pem;
ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:!DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
ssl_session_timeout         1d;
ssl_session_cache           shared:SSL:50m;
ssl_stapling                on;
ssl_stapling_verify         on;

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

upstream allocator {
  server 127.0.0.1:30050 fail_timeout=0;
}

upstream streams {
  server 127.0.0.1:31100 fail_timeout=0;
}

upstream admin_app {
  server 127.0.0.1:31996 fail_timeout=0;
}

upstream kubeflow_ambassador {
  server 127.0.0.1:31111 fail_timeout=0;
}

upstream tracing {
    server 127.0.0.1:32686 fail_timeout=0;
}

upstream admin_api_c {
    server 127.0.0.1:32000 fail_timeout=0;
}

upstream nb {
    server 127.0.0.1:30000 fail_timeout=0;
}

upstream tb {
    server 127.0.0.1:30002 fail_timeout=0;
}

upstream logs {
    server 127.0.0.1:31992 fail_timeout=0;
}

upstream dashboard-hystrix {
    server 127.0.0.1:32766 fail_timeout=0;
}

upstream dashboard-turbine {
    server 127.0.0.1:32765 fail_timeout=0;
}

upstream dashboard-grafana {
    server 127.0.0.1:31995 fail_timeout=0;
#    server 127.0.0.1:31425 fail_timeout=0;
}

upstream dashboard-prometheus {
    server 127.0.0.1:31994 fail_timeout=0;
}

#upstream dashboard-weavescope {
#    server 127.0.0.1:32767 fail_timeout=0;
#}

upstream dashboard-kubernetes {
    server 127.0.0.1:32763 fail_timeout=0;
}

upstream optimizations-ui {
    server 127.0.0.1:31999 fail_timeout=0;
}

upstream optimizations-api-m {
    server 127.0.0.1:31998 fail_timeout=0;
}

upstream optimizations-api-v {
    server 127.0.0.1:30678 fail_timeout=0;
}

upstream binderhub {
    server 127.0.0.1:30123 fail_timeout=0;
}

upstream kiali {
    server 127.0.0.1:13843 fail_timeout=0;
}

#upstream mlflow {
#    server 127.0.0.1:5000 fail_timeout=0;
#}

# Note:  31380 is the hard-coded http NodePort in our custom product/yaml/istio/istio-0.7.1.yaml
#        31390 is the hard-coded https NodePort
# I *believe* 31380 (http) is all we're using right now
# ***********************************************************************************
#
# THIS UPGRADE IS REQUIRED BY ALL paths/
# THAT USE ISTIO-INGRESS-CONTROLLER
#
#     proxy_http_version 1.1;
#     proxy_set_header Upgrade $http_upgrade;
#
# SEE /predict, /stream, /job, /function
#
# ***********************************************************************************#
upstream ingress-controller-http {
    server 127.0.0.1:31380 fail_timeout=0;
}
#upstream ingress-controller-https {
#    server 127.0.0.1:31390 fail_timeout=0;
#}

server {
    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;
    server_name _;
    return 301 https://$host$request_uri;
}

server {
    root /var/www/html;
    # by default, logs are in /var/log/nginx
#    listen 80 default_server;
    listen 443 default_server ssl;
#    listen [::]:80 default_server ipv6only=on;
    listen [::]:443 default_server ipv6only=on ssl;
    server_name _;

    add_header                  Strict-Transport-Security max-age=15768000;
    # These were suggested by a post on webpack + nginx
    #   https://andrepolischuk.com/webpack-with-nginx-upstreams/
    sendfile off;

    # 504 gateway time-out
    # see: https://asdqwe.net/blog/solutions-504-gateway-timeout-nginx/

    # timeout during which a keep-alive client connection will stay open on the server side
    # The zero value disables keep-alive client connections. The optional second parameter
    # sets a value in the “Keep-Alive: timeout=time” response header field. Two parameters may differ.
    # The “Keep-Alive: timeout=time” header field is recognized by Mozilla and Konqueror.
    # MSIE closes keep-alive connections by itself in about 60 seconds.
    # keepalive_timeout is in seconds
    # increasing timeout from default of 75s to 1800s (30 minutes) to handle long running docker image builds
    keepalive_timeout 1800;

    # Defines a timeout for establishing a connection with a proxied server.
    # It should be noted that this timeout cannot usually exceed 75 seconds.
    # leaving proxy_connect_timeout at the default 60s because this should not be closing long running connections.
    # proxy_connect_timeout 1800;

    # Sets a timeout for transmitting a request to the proxied server.
    # The timeout is set only between two successive write operations,
    # not for the transmission of the whole request.
    # If the proxied server does not receive anything within this time, the connection is closed.
    proxy_send_timeout 1800;

    # proxy_read_timeout defines a timeout for reading a response from the proxied server.
    # The timeout is set only between two successive read operations,
    # not for the transmission of the whole response.
    # If the proxied server does not transmit anything within this time, the connection is closed.
    proxy_read_timeout 1800;

    # Sets a timeout for transmitting a response to the client.
    # The timeout is set only between two successive write operations,
    # not for the transmission of the whole response.
    # If the client does not receive anything within this time, the connection is closed.
    send_timeout 1800;

    # When proxy_buffering on
    #   If the whole response does not fit into memory, a part of it can be saved to a temporary file on the disk.
    #   Writing to temporary files is controlled by the proxy_max_temp_file_size and proxy_temp_file_write_size directives.
    proxy_max_temp_file_size 0;

    # This is required for websockets/eventsource through cloudflare
    #   See https://github.com/antage/eventsource/issues/22
    # Enables or disables buffering of responses from the proxied server.
    #    When buffering is enabled, nginx receives a response from the proxied server as soon as possible,
    #       saving it into the buffers set by the proxy_buffer_size and proxy_buffers directives.
    #    When buffering is disabled, the response is passed to a client synchronously, immediately as it is received.
    #       nginx will not try to read the whole response from the proxied server.
    #       The maximum size of the data that nginx can receive from the server at a time is set by the proxy_buffer_size directive.
    #    Buffering can also be enabled or disabled by passing “yes” or “no” in the “X-Accel-Buffering” response header field.
    proxy_buffering off;

    # This is needed to fix the upload file size issue:
    #   https://github.com/PipelineAI/product-private/issues/482
    #
    # Note:  CloudFlare won't allow anything larger than 100MB on current plan

    client_max_body_size 500M;

    # ***********************************************************************************
    #
    # location syntax - locations are defined by a prefix string, or by a regular expression
    #
    #   location prefixes
    #       =  : prefix string - exact match of URI and location
    #               Example: location = / { config A }
    #          : prefix string - no prefix simple string match root
    #               Example: location / { config B }
    #          : prefix string ending with "/" slash character special processing - no prefix simple string match with special processing
    #               Example: location /documents/ { config C }
    #       ^~ : prefix string - when the longest matching prefix location has “^~” regular expressions are not checked
    #               Example: location ^~ /images/ { config D }
    #       ~* : regular expression - case-insensitive
    #               Example: location ~* \.(gif|jpg|jpeg)$ { config E }
    #       ~  : regular expression - case-sensitive
    #               Example: location ~* /Images/\.(gif|jpg|jpeg)$ { config F }
    #       @  : named location prefix used for request redirection ( not used for regular request processing )
    #               Example: location @customproxy { config G }
    #
    #   location matching rules
    #       1) nginx checks locations defined as simple strings  ( no prefix )
    #           a) when an exact match "=" is found, the search terminates
    #           b) when the longest match has the “^~” modifier, the search terminates
    #       2) when neither a nor b the location with the longest matching prefix is selected and remembered
    #       3) regular expressions are checked, in the order of their appearance in the configuration below terminating on 1st match
    #       4) if no match with a regular expression is found then the configuration of the prefix location remembered in step 2) is used
    #
    #       Example location rule matches:
    #       config A : /
    #       config B : /index.html
    #       config C : /documents/document.html
    #       config D : /images/1.gif
    #       config E : /documents/1.jpg
    #       config F : /Images/1.gif
    #
    #   location special processing : prefix string ending with "/" slash character
    #       1) requests are processed by one of:
    #           proxy_pass, fastcgi_pass, uwsgi_pass, scgi_pass, memcached_pass, or grpc_pass
    #       2) special processing is performed
    #
    #       301 permanent redirect status code
    #           returned when URI matches this prefix string WITHOUT the trailing "/" slash
    #           to prevent 301 permanent redirect define both:
    #               1) URI exact match "=" location like:
    #                   location = /user {
    #                       proxy_pass http://login.example.com;
    #                   }
    #               2) prefix string ending with "/" slash character location
    #                   location /user/ {
    #                       proxy_pass http://user.example.com;
    #                   }
    #
    #   root
    #       Sets the root directory for requests. For example, with the following configuration
    #
    #       Syntax: root path;
    #       Default: root html;
    #       Context:    http, server, location, if in location
    #
    #       Example:
    #           location /i/ {
    #               root /data/w3;
    #           }
    #           The /data/w3/i/top.gif file will be sent in response to the “/i/top.gif” request.
    #
    #   error processing
    #       status code of the last occurred error is returned to the client
    #
    #       named location "@" redirection error processing
    #           location / {
    #               error_page 404 = @fallback;
    #           }
    #
    #           location @fallback {
    #               proxy_pass http://backend;
    #           }
    #
    #       URL redirect error processing
    #           error_page 403      http://example.com/forbidden.html;
    #           error_page 404 =301 http://example.com/notfound.html;
    #
    # see: http://nginx.org/en/docs/http/ngx_http_core_module.html#location
    #
    #   location configuration
    #       ngx_http_proxy_module - http://nginx.org/en/docs/http/ngx_http_proxy_module.html
    #           directives
    #               proxy_http_version - http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_http_version
    #               proxy_set_header - http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header
    #
    #   embedded variables
    #       $host - in order of precedence:
    #                   host name from request line
    #                   or host name from “Host” request header field
    #                   or server name matching a request
    #       $proxy_add_x_forwarded_for - the “X-Forwarded-For” client request header field
    #                   with the $remote_addr variable appended to it, separated by a comma.
    #                   If the “X-Forwarded-For” field is not present in the client request header,
    #                   the $proxy_add_x_forwarded_for variable is equal to the $remote_addr variable.
    #       $remote_addr - client address
    #       $remote_port - client port
    # ***********************************************************************************

    location /seldon {
#        proxy_pass http://nb;
#        proxy_pass http://ingress-controller-http;
        proxy_pass http://kubeflow_ambassador;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Note:  We had to add this to prepare for the istio transition (after changing to ingress-controller-http)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }

    location /seldon/ {
#        proxy_pass http://nb;
#        proxy_pass http://ingress-controller-http;
        proxy_pass http://kubeflow_ambassador;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Note:  We had to add this to prepare for the istio transition (after changing to ingress-controller-http)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }

    location /admin/kubeflow {
#        proxy_pass http://nb;
#        proxy_pass http://ingress-controller-http;
        proxy_pass http://kubeflow_ambassador;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Note:  We had to add this to prepare for the istio transition (after changing to ingress-controller-http)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }

    location /admin/kubeflow/ {
#        proxy_pass http://nb;
#        proxy_pass http://ingress-controller-http;
        proxy_pass http://kubeflow_ambassador;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Note:  We had to add this to prepare for the istio transition (after changing to ingress-controller-http)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }

    location /admin/nb {
#        proxy_pass http://nb;
        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Note:  We had to add this to prepare for the istio transition (after changing to ingress-controller-http)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }

    location /admin/nb/ {
#        proxy_pass http://nb;
        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Note:  We had to add this to prepare for the istio transition (after changing to ingress-controller-http)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }

# Attempt to by-pass jupyter login screen (even though the user has already logged in to our app)
#
#  Not working - seems to allow anybody through - even unauthenticated.
#
#  This could be related to https://github.com/PipelineAI/product-private/issues/447
#    and https://github.com/PipelineAI/product-private/issues/308
#
#    location /admin/nb/hub/login/ {
#        proxy_pass http://nb/hub/oauth_login?next=%2Fnb%2Fhub%2Fuser%2Fcommunity%2Flab;
#    }

    location ~* /admin/nb/(.*)/(.*)/(api/kernels/[^/]+/(channels|iopub|shell|stdin)|terminals/websocket)/? {
#        proxy_pass http://nb;
        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # WebSocket Support
        #   https://serverfault.com/questions/801628/for-server-sent-events-sse-what-nginx-proxy-configuration-is-appropriate
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    location /admin/tb {
        proxy_pass http://tb/;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /admin/tb/ {
        proxy_pass http://tb/;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /admin/logs {
        proxy_pass http://logs/;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /admin/logs/ {
        proxy_pass http://logs/;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /admin/streams {
        proxy_pass http://streams/;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /admin/streams/ {
        proxy_pass http://streams/;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

#    location /admin/binderhub/ {
#        proxy_pass http://binderhub/;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header Host $host;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#    }

    # TODO: Does this trailing slash mess things up?
    # Do we need traililng slash at end of proxy_pass to match?
    # (I honestly don't know, but let's keep an eye on it.)
    location /predict {
        proxy_pass http://ingress-controller-http;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # ***********************************************************************************
        #
        # DO NOT REMOVE!!
        # THIS UPGRADE IS REQUIRED BECAUSE OF ISTIO-INGRESS-CONTROLLER!!
        #
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        # ***********************************************************************************
    }

    # TODO: Does this trailing slash mess things up?
    # Do we need traililng slash at end of proxy_pass to match?
    # (I honestly don't know, but let's keep an eye on it.)
#    location /stream {
#        proxy_pass http://ingress-controller-http;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # ***********************************************************************************
        #
        # DO NOT REMOVE!!
        # THIS UPGRADE IS REQUIRED BECAUSE OF ISTIO-INGRESS-CONTROLLER!!
        #
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
        # ***********************************************************************************
#    }

    # TODO: Does this trailing slash mess things up?
    # Do we need traililng slash at end of proxy_pass to match?
    # (I honestly don't know, but let's keep an eye on it.)
#    location /job {
#        proxy_pass http://ingress-controller-http;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # ***********************************************************************************
        #
        # DO NOT REMOVE!!
        # THIS UPGRADE IS REQUIRED BECAUSE OF ISTIO-INGRESS-CONTROLLER!!
        #
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
        # ***********************************************************************************
#    }

    # TODO: Does this trailing slash mess things up?
    # Do we need traililng slash at end of proxy_pass to match?
    # (I honestly don't know, but let's keep an eye on it.)
#    location /function {
#        proxy_pass http://ingress-controller-http;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # ***********************************************************************************
        #
        # DO NOT REMOVE!!
        # THIS UPGRADE IS REQUIRED BECAUSE OF ISTIO-INGRESS-CONTROLLER!!
        #
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
        # ***********************************************************************************
#    }

    # ************* pipeline cli REST API *********************************

    location = /admin/api/c {
#        proxy_pass http://admin_api_c;
        proxy_pass http://ingress-controller-http;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Scheme $scheme;
#        proxy_set_header X-Script-Name /admin/api/c/v1;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }

    location /admin/api/c/ {
#        proxy_pass http://admin_api_c;
        proxy_pass http://ingress-controller-http;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Scheme $scheme;
#        proxy_set_header X-Script-Name /admin/api/c/v1;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }

    # ************* guild cli REST API *********************************

#    location = /admin/api/g {
#        proxy_pass https://admin_api_g;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header Host $host;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection $connection_upgrade;
#    }

#    location /admin/api/g/ {
#        proxy_pass https://admin_api_g;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header Host $host;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection $connection_upgrade;
#    }

    location = /admin/app {
#        proxy_pass http://admin_app;
        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    location /admin/app/ {
#        proxy_pass http://admin_app;
        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    # TODO:  Put this behind /admin
    # Note:  I don't know why we need connection/upgrade here.
    #        This might be a CloudFlare/Nginx mismatch somewhere along the hops
    #        We didn't need this previously, I don't think.
    location /hystrix-dashboard {
#        proxy_pass http://dashboard-hystrix;
        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    # TODO:  Put this behind /admin
    location /turbine.stream {
#        proxy_pass http://127.0.0.1:32765;
        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade Required;
        proxy_set_header Connection Upgrade;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection $connection_upgrade;
    }

    location = /admin/kubernetes {
	proxy_pass https://dashboard-kubernetes/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    location /admin/kubernetes/ {
        proxy_pass https://dashboard-kubernetes/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

# This is unused, so I'm commenting it out
#
#    location /admin/weavescope {
#        proxy_pass http://dashboard-weavescope/;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#    }
#
#    location /admin/weavescope/ {
#        proxy_pass http://dashboard-weavescope/;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#    }

# Grafana Hack
    location = /public/build {
        # location to handle exact URL match without trailing slash
#        proxy_pass http://dashboard-grafana;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    location = /public/build/ {
        # location to handle exact URL match without trailing slash
#        proxy_pass http://dashboard-grafana;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    location = /public/fonts {
        # location to handle exact URL match without trailing slash
#        proxy_pass http://dashboard-grafana;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    location = /public/fonts/ {
        # location to handle exact URL match without trailing slash
#        proxy_pass http://dashboard-grafana;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    location = /public/img {
        # location to handle exact URL match without trailing slash
#        proxy_pass http://dashboard-grafana;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    location = /public/img/ {
        # location to handle exact URL match without trailing slash
#        proxy_pass http://dashboard-grafana;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    location = /admin/grafana {
        # location to handle exact URL match without trailing slash
#        proxy_pass http://dashboard-grafana/;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection $connection_upgrade;
    }

    location /admin/grafana/ {
        # NOTE: trailing "/" slash indicates location special processing : prefix string ending with "/" slash character
        #       1) requests are processed by one of:
        #           proxy_pass, fastcgi_pass, uwsgi_pass, scgi_pass, memcached_pass, or grpc_pass
        #       2) special processing is performed
#        proxy_pass http://dashboard-grafana/;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection $connection_upgrade;
    }

    location /demo/ {
        root   /var/www/html;
        index  index.html;
    }

    location = /admin/tracing {
        # = prefix string - exact match of URI and location
        proxy_pass http://tracing;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /admin/tracing/ {
        # prefix string ending with "/" slash character special processing - no prefix simple string match with special processing
        proxy_pass http://tracing;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    #####################
    # MLflow Hacks
    #####################
    location /ajax-api {
        # prefix string ending with "/" slash character special processing - no prefix simple string match with special processing
#        proxy_pass http://mlflow;
        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Note:  We had to add this to prepare for the istio transition (after changing to ingress-controller-http)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }

    location /ajax-api/ {
        # prefix string ending with "/" slash character special processing - no prefix simple string match with special processing
#        proxy_pass http://mlflow;
        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Note:  We had to add this to prepare for the istio transition (after changing to ingress-controller-http)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }

    location /api {
        # prefix string ending with "/" slash character special processing - no prefix simple string match with special processing
#        proxy_pass http://mlflow;
        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Note:  We had to add this to prepare for the istio transition (after changing to ingress-controller-http)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }

    location /api/ {
        # prefix string ending with "/" slash character special processing - no prefix simple string match with special processing
#        proxy_pass http://mlflow;
        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Note:  We had to add this to prepare for the istio transition (after changing to ingress-controller-http)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }

    location /admin/tracking {
        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }

    location /admin/tracking/ {
        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }

    location /airflow {
        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }

    location /airflow/ {
        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }

    location /mlflow {
#        proxy_pass http://mlflow;
        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }

    location /mlflow/ {
#        proxy_pass http://mlflow;
        proxy_pass http://ingress-controller-http;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }

    location /allocate {
        proxy_pass http://allocator;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }

    location /allocations {
        proxy_pass http://allocator;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }

    location /allocation {
        proxy_pass http://allocator;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }

    location /kiali {
        # prefix string ending with "/" slash character special processing - no prefix simple string match with special processing
#        proxy_pass http://mlflow;
        proxy_pass http://kiali;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Note:  We had to add this to prepare for the istio transition (after changing to ingress-controller-http)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }

    location /kiali/ {
        # prefix string ending with "/" slash character special processing - no prefix simple string match with special processing
#        proxy_pass http://mlflow;
        proxy_pass http://kiali;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Note:  We had to add this to prepare for the istio transition (after changing to ingress-controller-http)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
    }


#    location ~* /notebook/(.*)/(.*)/(api/kernels/[^/]+/(channels|iopub|shell|stdin)|terminals/websocket)/? {
#        proxy_pass http://kubeflow_ambassador;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        # WebSocket Support
#        #   https://serverfault.com/questions/801628/for-server-sent-events-sse-what-nginx-proxy-configuration-is-appropriate
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection $connection_upgrade;
#    }

    location / {
#        proxy_pass http://nb;
#        proxy_pass http://ingress-controller-http;
        proxy_pass http://kubeflow_ambassador;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Note:  We had to add this to prepare for the istio transition (after changing to ingress-controller-http)
        proxy_http_version 1.1;
        # Turning these on will cause jupyter (/tree, not sure about /lab) to be flakey including missing visualizations and such
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

#    location = / {
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        rewrite    / /admin/app redirect;
#    }
}
