apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: notebook-cpu
  labels:
    app: notebook-cpu
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notebook-cpu
  template:
    metadata:
      labels:
        app: notebook-cpu
      annotations:
        sidecar.istio.io/inject: "false"      
        prometheus.io/scrape: "true"
        prometheus.io/path: "/admin/nb/hub/metrics"
        prometheus.io/port: "8754"
    spec:
      imagePullSecrets:
      - name: docker-registry-secret
      containers:
      - name: notebook-cpu
        image: docker.io/pipelineai/notebook-cpu:1.5.0
        resources:
          limits:
            memory: 2Gi
            cpu: 2000m
          requests:
            memory: 2Gi
            cpu: 2000m
        imagePullPolicy: "Always"
        terminationMessagePolicy: "FallbackToLogsOnError"
        volumeMounts:
#        - name: rootfs-usr-lib
#          mountPath: /rootfs/usr/lib
#          readOnly: true
        - name: users-volume
          mountPath: /mnt/pipelineai/users
#        - name: notebooks-volume
#          mountPath: /mnt/pipelineai/notebooks
        env:
        # Note:  When adding vars here, make sure you whitelist them in jupyterhub_config.py
        #        otherwise, jupyter notebooks won't be able to see them
        - name: PIPELINE_USERS_HOME
          value: /mnt/pipelineai/users
        - name: PIPELINE_NOTEBOOKS_HOME
          value: /mnt/pipelineai/notebooks
        - name: GET_HOSTS_FROM
          value: env
        - name: SPARK_MASTER
          value: k8s://https://kubernetes-api-server:6443
        - name: SPARK_SUBMIT_ARGS
          value: ""
        - name: JUPYTERHUB_AUTHENTICATOR
          value: dummyauthenticator.DummyAuthenticator 
        - name: AUTH0_SUBDOMAIN
          value: "" 
        - name: OAUTH_CALLBACK_URL
          value: "" 
        - name: OAUTH_CLIENT_ID
          value: ""
        - name: OAUTH_CLIENT_SECRET
          value: ""
        - name: GITHUB_OAUTH_CLIENT_ID
          value: ""
        - name: GITHUB_OAUTH_CLIENT_SECRET
          value: ""
        ports:
        - containerPort: 6006
        - containerPort: 8754
        - containerPort: 8755
      volumes:
      - name: users-volume
        persistentVolumeClaim:
          claimName: users-pvc
#      - name: rootfs-usr-lib
#        hostPath:
#          path: /usr/lib
#      - name: users-volume
#        flexVolume:
#          driver: ceph.rook.io/rook
#          fsType: ceph
#          options:
#            fsName: pipelineai-fs # name of the filesystem specified in the filesystem CRD.
#            clusterNamespace: {{ PIPELINE_NAMESPACE }} # namespace where the Rook cluster is deployed
#            # by default the path is /, but you can override and mount a specific path of the filesystem by using the path attribute
#            # the path must exist on the filesystem, otherwise mounting the filesystem at that path will fail
#            path: users/
#      - name: notebooks-volume
#        flexVolume:
#          driver: ceph.rook.io/rook
#          fsType: ceph
#          options:
#            fsName: pipelineai-fs # name of the filesystem specified in the filesystem CRD.
#            clusterNamespace: {{ PIPELINE_NAMESPACE }} # namespace where the Rook cluster is deployed
#            # by default the path is /, but you can override and mount a specific path of the filesystem by using the path attribute
#            # the path must exist on the filesystem, otherwise mounting the filesystem at that path will fail
#            path: notebooks/
