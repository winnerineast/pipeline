apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ PIPELINE_IMAGE_REGISTRY_NAMESPACE }}-{{ PIPELINE_RESOURCE_NAME }}
spec:
  hosts:
  - "*"
  gateways:
  - "gateway"
  http:
  - match:
    - uri:
        prefix: /predict/{{ PIPELINE_RESOURCE_NAME }}/invoke
    rewrite:
      uri: /invoke
{%- if PIPELINE_RESOURCE_NUM_SPLIT_TAGS_AND_WEIGHTS > 0 %}
    route:
   {% for idx in range(PIPELINE_RESOURCE_NUM_SPLIT_TAGS_AND_WEIGHTS) %}
    - destination:
        host: {{ PIPELINE_IMAGE_REGISTRY_NAMESPACE }}-{{ PIPELINE_RESOURCE_NAME }}
        port:
          number: 8080
        subset: "{{ PIPELINE_RESOURCE_SPLIT_TAG_LIST[idx] }}"
      weight: {{ PIPELINE_RESOURCE_SPLIT_WEIGHT_LIST[idx] }}
   {% endfor %}
{%- endif %}

{%- if PIPELINE_RESOURCE_NUM_SHADOW_TAGS > 0 %}
    mirror:
   {% for idx in range(PIPELINE_RESOURCE_NUM_SHADOW_TAGS) %}
      host: {{ PIPELINE_IMAGE_REGISTRY_NAMESPACE }}-{{ PIPELINE_RESOURCE_NAME }}
      port:
        number: 8080
      subset: "{{ PIPELINE_RESOURCE_SHADOW_TAG_LIST[idx] }}"
   {% endfor %}
{%- endif %}
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: {{ PIPELINE_IMAGE_REGISTRY_NAMESPACE }}-{{ PIPELINE_RESOURCE_NAME }}-invoke 
  namespace: {{ PIPELINE_NAMESPACE }}
spec:
  host: {{ PIPELINE_IMAGE_REGISTRY_NAMESPACE }}-{{ PIPELINE_RESOURCE_NAME }} 
  subsets:
   {% for idx in range(PIPELINE_RESOURCE_NUM_SPLIT_TAGS_AND_WEIGHTS) %}
   - name: "{{ PIPELINE_RESOURCE_SPLIT_TAG_LIST[idx] }}"
     labels:
       version: "{{ PIPELINE_RESOURCE_SPLIT_TAG_LIST[idx] }}"
   {% endfor %}

####################
# TODO:  Add -ping, -dashboardstream, -prometheus, -metrics, -denytherest
####################
